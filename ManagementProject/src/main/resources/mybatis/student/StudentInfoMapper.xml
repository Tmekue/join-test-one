<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yizhi.student.dao.StudentInfoDao">
    <insert id="save" parameterType="com.yizhi.student.domain.StudentInfoDO" useGeneratedKeys="true" keyProperty="id">
        insert into s_student_info
        (`student_id`,`exam_id`,`class_id`,`student_name`,`certify`,`mail_address`,
         `foreign_lanaguage`,`student_sex`,`nation`,`political`,`card_id`,`telephone`
         ,`subject_type`,`tocollege`, `tomajor`,`birthplace`,`grade`,`isstate`,`birthday`,`note`,`add_time`,`add_userid`)
        values
        (
            #{studentId},#{examId}, #{classId},#{studentName},#{certify},#{mailAddress},
            #{foreignLanaguage},#{studentSex},#{nation},#{political}, #{cardId},#{telephone},
            #{subjectType},#{tocollege},#{tomajor},#{birthplace},#{grade},#{isstate},#{birthday},#{note},#{addTime},#{addUserid}
        )
    </insert>

    <update id="update">
        update s_student_info
        <set>
            `student_id` = #{studentId},
            `exam_id` = #{examId},
            `class_id` = #{classId},
            `student_name` = #{studentName},
            `certify` = #{certify},
            `mail_address` = #{mailAddress},
            `foreign_lanaguage` = #{foreignLanaguage},
            `student_sex` = #{studentSex},
            `nation` = #{nation},
            `political` = #{political},
            `card_id` = #{cardId},
            `telephone` = #{telephone},
            `subject_type` = #{subjectType},
            `tocollege` = #{tocollege},
            `tomajor` = #{tomajor},
            `birthplace` = #{birthplace},
            `grade` = #{grade},
            `isstate` = #{isstate},
            `birthday` = #{birthday},
            `note` = #{note},
            `edit_time` = #{editTime},
            `edit_userid` = #{editUserid}

        </set>

        where id = #{id}
    </update>
    <delete id="remove">
        delete from s_student_info where id = #{id}
    </delete>
    <delete id="batchRemove">
        delete from s_student_info where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="list" resultType="com.yizhi.student.domain.StudentInfoDO">
        select *
        from s_student_info a
        <where>
            <if test="name != null and name != ''"> and a.student_name LIKE CONCAT('%',#{name},'%') </if>
            <if test="tocollegeId != null and tocollegeId != ''"> and a.tocollege = #{tocollegeId} </if>
            <if test="tomajorId != null and tomajorId != ''"> and a.tomajor = #{tomajorId} </if>
            <if test="classId != null and classId != ''"> and a.class_id = #{classId} </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by a.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{pageSize}
        </if>
    </select>
    <select id="count" resultType="java.lang.Integer">
        select count(*) from s_student_info a<where>
        <if test="name != null and name != ''"> and a.student_name LIKE CONCAT('%',#{name},'%') </if>
        <if test="tocollegeId != null and tocollegeId != ''"> and a.tocollege = #{tocollegeId} </if>
        <if test="tomajorId != null and tomajorId != ''"> and a.tomajor = #{tomajorId} </if>
        <if test="classId != null and classId != ''"> and a.class_id = #{classId} </if>
    </where>
    </select>
    <select id="get" resultType="com.yizhi.student.domain.StudentInfoDO">
        select * from s_student_info where id = #{id}
    </select>
</mapper>